{"version":3,"sources":["Nav.js","axios.js","Requests.js","Banner.js","Row.js","screens/HomeScreen.js","firebase.js","screens/SignupScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/PlansScreen.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignupScreen","emailRef","useRef","passwordRef","ref","placeholder","type","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","catch","error","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlansScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","where","productDoc","id","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","store","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.671dd142.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <div className=\"nav_contents\">\r\n        <img\r\n          onClick={() => history.push(\"/\")}\r\n          className=\"nav_logo\"\r\n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav_avatar\"\r\n          src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3'\r\n});\r\n\r\nexport default instance;","\r\nconst API_KEY = '97d9b3683cb347df40322617bb19b157';\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React, { useState, useEffect} from 'react'\r\nimport './Banner.css';\r\nimport axios from './axios';\r\nimport requests from './Requests';\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length -1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    console.log(movie);\r\n\r\n    function truncate(string, n) {\r\n            return string?.length > n ? string.substr(0, n - 1) + '...' : string;\r\n        }\r\n    return <header className='banner' style={{\r\n        backgroundSize: 'cover',\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n    }}>\r\n        <div className=\"banner_contents\">\r\n            <h1 className=\"banner_title\">\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner_buttons\">\r\n                <button className='banner_button'>Play</button>\r\n                <button className='banner_button'>My List</button>\r\n            </div>\r\n            <h1 className=\"banner_description\">\r\n                {truncate(movie?.overview, 150)}</h1>\r\n        </div>\r\n\r\n        <div className=\"banner--fadeBottom\" />\r\n    </header>;  \r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nfunction Row({title, fetchUrl, isLargeRow = false}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    \r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n\r\n            <div className='row_posters'> \r\n                {movies.map(\r\n                    (movie) => \r\n                    ((isLargeRow && movie.poster_path) ||\r\n                    (!isLargeRow && movie.backdrop_path)) && (<img\r\n                    className={`row_poster ${isLargeRow && 'row_posterLarge'}`}\r\n                    key={movie} \r\n                    src={`${base_url}${\r\n                        isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                    }`} \r\n                    alt={movie.name}/>)\r\n                    \r\n            )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport './HomeScreen.css';\r\nimport Nav from '../Nav.js';\r\nimport Banner from '../Banner';\r\nimport requests from '../Requests';\r\nimport Row from '../Row';\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n      <div className='homeScreen'>\r\n        <Nav />\r\n        <Banner />\r\n        <Row\r\n            title='NETFLIX ORIGINALS'\r\n            fetchUrl={requests.fetchNetflixOriginals}\r\n            isLargeRow\r\n        />\r\n        <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\r\n        <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\r\n        <Row title='Action Movies' fetchUrl={requests.fetchActionMovies} />\r\n        <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\r\n        <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\r\n        <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\r\n        <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDt1FK5eMA6UlZmQKX7Ux2_mnqxj-vKmlE\",\r\n    authDomain: \"netflix-build-9f707.firebaseapp.com\",\r\n    projectId: \"netflix-build-9f707\",\r\n    storageBucket: \"netflix-build-9f707.appspot.com\",\r\n    messagingSenderId: \"399933095779\",\r\n    appId: \"1:399933095779:web:1a74688504b46a780f1d56\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export { auth };\r\n  export default db;","import React, { useRef } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport \"./SignupScreen.css\";\r\n\r\nfunction SignupScreen() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\r\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\r\n        <button type=\"submit\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n\r\n        <h4>\r\n          <span className=\"signupScreen_gray\">New to Netflix? </span>\r\n          <span className=\"signupScreen_link\" onClick={register}>\r\n            Sign Up now.\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupScreen;\r\n\r\n","import React, { useState } from 'react';\r\nimport './LoginScreen.css';\r\nimport SignupScreen from './SignupScreen';\r\n\r\nfunction LoginScreen() {\r\n    const [signIn, setSignIn] = useState(false);\r\n\r\n    return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"loginScreen_background\">\r\n        <img\r\n          className=\"loginScreen_logo\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n        <button onClick={() => setSignIn(true)} className=\"loginScreen_button\">\r\n          Sign In\r\n        </button>\r\n\r\n        <div className=\"loginScreen_gradient\" />\r\n      </div>\r\n\r\n      <div className=\"loginScreen_body\">\r\n        {signIn ? (\r\n          <SignupScreen />\r\n        ) : (\r\n          <>\r\n            <h1>Unlimited films, TV programs and more.</h1>\r\n            <h2>Watch anywhere. Cancel at any time.</h2>\r\n            <h3>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership.\r\n            </h3>\r\n\r\n            <div className=\"loginScreen_input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email Address\" />\r\n                <button\r\n                  onClick={() => setSignIn(true)}\r\n                  className=\"loginScreen_getStarted\"\r\n                >\r\n                  GET STARTED\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport db from \"../firebase\";\r\nimport \"./PlansScreen.css\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nfunction PlansScreen() {\r\n  const [products, setProducts] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  const [subscription, setSubscription] = useState(null);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"subscriptions\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach(async (subscription) => {\r\n          setSubscription({\r\n            role: subscription.data().role,\r\n            current_period_end: subscription.data().current_period_end.seconds,\r\n            current_period_start: subscription.data().current_period_start\r\n              .seconds,\r\n          });\r\n        });\r\n      });\r\n  }, [user.uid]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {};\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data();\r\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].prices = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            };\r\n          });\r\n        });\r\n        setProducts(products);\r\n      });\r\n  }, []);\r\n\r\n  console.log(products);\r\n  console.log(subscription);\r\n\r\n  const loadCheckout = async (priceId) => {\r\n    const docRef = await db\r\n      .collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"checkout_sessions\")\r\n      .add({\r\n        price: priceId,\r\n        success_url: window.location.origin,\r\n        cancel_url: window.location.origin,\r\n      });\r\n\r\n    docRef.onSnapshot(async (snap) => {\r\n      const { error, sessionId } = snap.data();\r\n\r\n      if (error) {\r\n        // Show an error to your customer and\r\n        // inspect your Cloud Function logs in the Firebase console.\r\n        alert(`An error occured: ${error.message}`);\r\n      }\r\n\r\n      if (sessionId) {\r\n        // We have a session, let's redirect to Checkout\r\n        // Init Stripe\r\n\r\n        const stripe = await loadStripe(\r\n          \"pk_test_51IzQ7vDfOQSgDLrKS8iz6Br2nvW2EdUa3DdkHud8zCXupeBQdH97NUmKDSb75WCXe7CbxFMKsBS5ngxi6gpKOc5L00MxPH6lsf\"\r\n        );\r\n        stripe.redirectToCheckout({ sessionId });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"plansScreen\">\r\n      <br />\r\n      {subscription && (\r\n        <p>\r\n          Renewal date:{\" \"}\r\n          {new Date(\r\n            subscription?.current_period_end * 1000\r\n          ).toLocaleDateString()}\r\n        </p>\r\n      )}\r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        const isCurrentPackage = productData.name\r\n          ?.toLowerCase()\r\n          .includes(subscription?.role);\r\n\r\n        return (\r\n          <div\r\n            key={productId}\r\n            className={`${\r\n              isCurrentPackage && \"plansScreen_plan--disabled\"\r\n            } plansScreen_plan`}\r\n          >\r\n            <div className=\"plansScreen_info\">\r\n              <h5>{productData.name}</h5>\r\n              <h6>{productData.description}</h6>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() =>\r\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\r\n              }\r\n            >\r\n              {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlansScreen;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"../Nav\";\r\nimport PlansScreen from \"./PlansScreen\";\r\nimport \"./ProfileScreen.css\";\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n      <div className=\"profileScreen_body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profileScreen_info\">\r\n          <img\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profileScreen_details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profileScreen_plans\">\r\n              <h3>Plans</h3>\r\n\r\n              <PlansScreen />\r\n              <button\r\n                onClick={() => auth.signOut()} \r\n                className=\"profileScreen_signOut\">\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;","import React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport LoginScreen from './screens/LoginScreen';\nimport { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport ProfileScreen from './screens/ProfileScreen';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n          );\n      } else {\n        //Logged out\n        dispatch(logout());\n      }\n    });\n\n    return unsubscribe;\n  }, [dispatch]);\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n        <Switch>\n          <Route path='/profile'>\n            <ProfileScreen />\n          </Route>\n          <Route exact path='/'>\n            <HomeScreen />\n          </Route>\n        </Switch>\n        )}  \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}